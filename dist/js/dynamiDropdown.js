/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@kintone/rest-api-client/lib/index.browser.js":
/*!********************************************************************!*\
  !*** ./node_modules/@kintone/rest-api-client/lib/index.browser.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.KintoneRestAPIClient = void 0;\nvar platform_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './platform/'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nvar browserDeps = __importStar(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './platform/browser'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())));\n(0, platform_1.injectPlatformDeps)(browserDeps);\nvar KintoneRestAPIClient_1 = __webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './KintoneRestAPIClient'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }()));\nObject.defineProperty(exports, \"KintoneRestAPIClient\", ({ enumerable: true, get: function () { return KintoneRestAPIClient_1.KintoneRestAPIClient; } }));\n__exportStar(__webpack_require__(Object(function webpackMissingModule() { var e = new Error(\"Cannot find module './error'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())), exports);\n//# sourceMappingURL=index.browser.js.map\n\n//# sourceURL=webpack://customize-dynamic-dropdown/./node_modules/@kintone/rest-api-client/lib/index.browser.js?");

/***/ }),

/***/ "./src/common/dynamicDropdown.ts":
/*!***************************************!*\
  !*** ./src/common/dynamicDropdown.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.dynamicDropdown = void 0;\r\nconst kintone_api_1 = __webpack_require__(/*! ./kintone-api */ \"./src/common/kintone-api.ts\");\r\nconst static_1 = __webpack_require__(/*! ../static/static */ \"./src/static/static.ts\");\r\nclass dynamicDropdown {\r\n    constructor() {\r\n        const kucTable = {};\r\n        this.CodeArr = {};\r\n        this.columns = [];\r\n        this.initialData = [];\r\n        this.forDynamicValueAcquisition = { childObj: {} };\r\n        this.defaultRowData = {};\r\n        this.initialObj = {};\r\n        this.RespValue = {\r\n            AllCodeResponceValue: {},\r\n            CodeArr: [],\r\n            BranchNoList: [],\r\n            BranchNoArr: [],\r\n            LookUpValue: null\r\n        };\r\n        this.Settings = {\r\n            requestAllCodeBody: {\r\n                app: 0,\r\n                condition: \"order by レコード番号 asc\",\r\n                fields: []\r\n            },\r\n            Code: null,\r\n            BranchCode: null,\r\n            kucTable: kucTable,\r\n            propertyArr: []\r\n        };\r\n    }\r\n    CodeOptionsList(parentObj) {\r\n        let self = this;\r\n        let CodeList = [];\r\n        this.RespValue.CodeArr = [{ label: \"-----\", value: \"-----\" }];\r\n        console.log(this.RespValue.CodeArr, parentObj);\r\n        console.log(parentObj);\r\n        this.RespValue.AllCodeResponceValue[parentObj.app].records.forEach((element) => {\r\n            var _a;\r\n            console.log(element);\r\n            let subTitle = (parentObj.subTitle != \"\") ? `(${element[parentObj.subTitle].value})` : \"\";\r\n            CodeList.push({ \"label\": element[parentObj.parentOptionCode].value + subTitle, \"value\": ((_a = element[parentObj.parentOptionCode].value) === null || _a === void 0 ? void 0 : _a.toString()) });\r\n            CodeList.forEach((ele, index) => {\r\n                self.RespValue.CodeArr[index + 1] = ele;\r\n                console.log(ele);\r\n            });\r\n        });\r\n        return self.RespValue.CodeArr;\r\n    }\r\n    BranchNoOptionsList(parentObj, childObj, childName) {\r\n        let self = this;\r\n        this.RespValue.BranchNoList = [[{ label: \"\", value: \"\" }]];\r\n        console.log(parentObj.parentOptionCode);\r\n        this.RespValue.BranchNoArr = [{ label: \"-----\", value: \"-----\" }];\r\n        let TableValue = this.RespValue.AllCodeResponceValue[parentObj.app].records.filter((ele) => ele[parentObj.parentOptionCode].value == this.Settings.Code);\r\n        if (TableValue.length == 0) {\r\n            this.RespValue.BranchNoArr = [...this.RespValue.BranchNoArr];\r\n        }\r\n        else {\r\n            this.RespValue.BranchNoList = TableValue === null || TableValue === void 0 ? void 0 : TableValue.map((ele, index) => {\r\n                if (index == 0) {\r\n                    let test = ele[childObj.parentOptionTable].value;\r\n                    return test.map((ele) => {\r\n                        let subTitle = (childObj.subTitle != \"\") ? `(${ele.value[childObj.subTitle].value})` : \"\";\r\n                        return {\r\n                            label: `${ele.value[childObj.parentOptionCode].value}` + subTitle, value: `${ele.value[childObj.parentOptionCode].value}`\r\n                        };\r\n                    });\r\n                }\r\n            });\r\n            const BranchNoList = this.RespValue.BranchNoList.flat();\r\n            this.RespValue.BranchNoArr = [...this.RespValue.BranchNoArr, ...BranchNoList];\r\n        }\r\n        return this.RespValue.BranchNoArr;\r\n    }\r\n    appList() {\r\n        let appListArr = Object.keys(this.Settings.kucTable).map((column) => {\r\n            let array = [this.Settings.kucTable[column].app];\r\n            return array;\r\n        });\r\n        return appListArr.flat().filter(e => e).filter((e, i, self) => { return self.indexOf(e) == i; });\r\n    }\r\n    ;\r\n    ForDynamicValueAcquisition() {\r\n        let child = {};\r\n        let parent = Object.keys(this.Settings.kucTable).map((property) => {\r\n            if (this.Settings.kucTable[property].parent != \"\") {\r\n                return child[property] = this.Settings.kucTable[property];\r\n            }\r\n            return;\r\n        }).filter(e => e)[0];\r\n        return { \"childObj\": child };\r\n    }\r\n    setCodeArr(forDynamicValueAcquisition) {\r\n        this.CodeArr = {};\r\n        Object.keys(forDynamicValueAcquisition.childObj).forEach(async (child) => {\r\n            return this.CodeArr[forDynamicValueAcquisition.childObj[child].parent] = this.CodeOptionsList((this.Settings.kucTable[forDynamicValueAcquisition.childObj[child].parent]));\r\n        });\r\n        return;\r\n    }\r\n    ;\r\n    async OptionalAppRecordAcquisition(doAppList) {\r\n        await Promise.all(doAppList.map(async (app) => {\r\n            let fieldsList = [\"\"];\r\n            const dofieldsList = () => {\r\n                let fieldListArr = Object.keys(this.Settings.kucTable).map((column) => {\r\n                    let array = (app == this.Settings.kucTable[column].app) ? [this.Settings.kucTable[column].parentOptionCode, this.Settings.kucTable[column].parentOptionTable, this.Settings.kucTable[column].lookUpTable] : [];\r\n                    return array;\r\n                });\r\n                fieldsList = fieldListArr.flat().filter(e => e).filter((e, i, self) => { return self.indexOf(e) == i; });\r\n            };\r\n            dofieldsList();\r\n            this.Settings.requestAllCodeBody.app = app;\r\n            this.Settings.requestAllCodeBody.fields = fieldsList;\r\n            const api = new kintone_api_1.kintoneApi();\r\n            const view = await api.GetTestingItems(this.Settings.requestAllCodeBody);\r\n            this.RespValue.AllCodeResponceValue[app] = view;\r\n            console.log(view);\r\n        }));\r\n    }\r\n    ;\r\n    setParentDeafultValue(forDynamicValueAcquisition) {\r\n        Object.keys(forDynamicValueAcquisition.childObj).forEach(async (child) => {\r\n            this.Settings.kucTable[forDynamicValueAcquisition.childObj[child].parent].defaultRowData = this.CodeArr[forDynamicValueAcquisition.childObj[child].parent];\r\n            console.log(this.Settings.kucTable[forDynamicValueAcquisition.childObj[child].parent].defaultRowData);\r\n        });\r\n        return;\r\n    }\r\n    intialSetOptionssubTitle(e, child, forDynamicValueAcquisition) {\r\n        this.Settings.Code = e[forDynamicValueAcquisition.childObj[child].parent].value;\r\n        this.Settings.BranchCode = e[child].value;\r\n    }\r\n    ;\r\n    async intialCodeSelect(e, property, forDynamicValueAcquisition) {\r\n        return new Promise((resolve, reject) => {\r\n            this.RespValue.BranchNoArr = [{ label: \"-----\", value: \"-----\" }];\r\n            let result = {};\r\n            let resultObj = {};\r\n            let childName = \"\";\r\n            let select = Object.keys(forDynamicValueAcquisition.childObj).forEach(async (child) => {\r\n                if (e[forDynamicValueAcquisition.childObj[child].parent] && e[forDynamicValueAcquisition.childObj[child].parent].value != \"-----\" && e[forDynamicValueAcquisition.childObj[child].parent].value != \"\") {\r\n                    if (property == child) {\r\n                        this.intialSetOptionssubTitle(e, child, forDynamicValueAcquisition);\r\n                        resultObj[property] = this.BranchNoOptionsList((this.Settings.kucTable[forDynamicValueAcquisition.childObj[child].parent]), (this.Settings.kucTable[child]), property);\r\n                        console.log(typeof e[property] != \"undefined\");\r\n                        let arr;\r\n                        if (this.Settings.kucTable[property].subTitle != \"\" || typeof e[property] != \"undefined\") {\r\n                            console.log(resultObj[property]);\r\n                            arr = resultObj[property].filter((ele) => ele.value == e[property].value);\r\n                            console.log(arr);\r\n                            arr = (arr.length > 0) ? arr[0].value : \"-----\";\r\n                        }\r\n                        result[child] = {\r\n                            items: resultObj[property],\r\n                            value: ((typeof e[property] != \"undefined\") && (arr != \"-----\")) ? e[property].value : \"-----\"\r\n                        };\r\n                        console.log(result[child]);\r\n                        childName = child;\r\n                    }\r\n                }\r\n            });\r\n            console.log(result);\r\n            resolve(result[childName] || {\r\n                items: [{ label: \"-----\", value: \"-----\" }],\r\n                value: (typeof e[property] != \"undefined\") ? e[property].value : \"-----\"\r\n            });\r\n        });\r\n    }\r\n    ;\r\n    init() {\r\n        return new Promise(async (resolve, reject) => {\r\n            this.Settings.kucTable = static_1.kucTable;\r\n            this.forDynamicValueAcquisition = this.ForDynamicValueAcquisition();\r\n            const doAppList = this.appList();\r\n            await this.OptionalAppRecordAcquisition(doAppList);\r\n            this.setCodeArr(this.forDynamicValueAcquisition);\r\n            this.setParentDeafultValue(this.forDynamicValueAcquisition);\r\n            this.defaultRowData = {};\r\n            this.initialObj = {};\r\n            Object.keys(this.Settings.kucTable).map((property) => {\r\n                // let columnObj: dyDropDwn.column = {\r\n                //     header: \"\", cell: ({ rowIndex, onCellChange }) => {\r\n                //         return (<></>)\r\n                //     }\r\n                // };\r\n                if (this.Settings.kucTable[property].type == \"dropdown\") {\r\n                    this.defaultRowData[property] = { items: this.Settings.kucTable[property].defaultRowData, value: this.Settings.kucTable[property].defaultRowData[0].value };\r\n                    this.initialObj[property] = { items: this.Settings.kucTable[property].defaultRowData, value: this.Settings.kucTable[property].defaultRowData[0].value };\r\n                }\r\n                else {\r\n                    this.defaultRowData[property] = { value: this.Settings.kucTable[property].defaultRowData };\r\n                    this.initialObj[property] = { value: this.Settings.kucTable[property].defaultRowData };\r\n                }\r\n            });\r\n            this.initialData.push(this.initialObj);\r\n            resolve(\"ok\");\r\n        });\r\n    }\r\n}\r\nexports.dynamicDropdown = dynamicDropdown;\r\n\n\n//# sourceURL=webpack://customize-dynamic-dropdown/./src/common/dynamicDropdown.ts?");

/***/ }),

/***/ "./src/common/kintone-api.ts":
/*!***********************************!*\
  !*** ./src/common/kintone-api.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.kintoneApi = void 0;\r\nconst rest_api_client_1 = __webpack_require__(/*! ../../node_modules/@kintone/rest-api-client */ \"./node_modules/@kintone/rest-api-client/lib/index.browser.js\");\r\nclass kintoneApi {\r\n    constructor() {\r\n        this.client = new rest_api_client_1.KintoneRestAPIClient();\r\n    }\r\n    async GetTestingItems(params) {\r\n        return await this.client.record.getAllRecords(params).then((resp) => resp).catch((err) => err);\r\n    }\r\n}\r\nexports.kintoneApi = kintoneApi;\r\n\n\n//# sourceURL=webpack://customize-dynamic-dropdown/./src/common/kintone-api.ts?");

/***/ }),

/***/ "./src/static/static.ts":
/*!******************************!*\
  !*** ./src/static/static.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\r\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\r\nexports.kucTable = exports.spaceCode = exports.tableLabel = exports.tableCode = exports.events = void 0;\r\nexports.events = ['app.record.create.show', 'app.record.edit.show'];\r\nexports.tableCode = 'セット項目テーブル';\r\nexports.tableLabel = 'セット項目テーブル';\r\nexports.spaceCode = 'LookUp_Space';\r\nexports.kucTable = {\r\n    枝番号: {\r\n        type: \"dropdown\",\r\n        columnLabel: \"枝番号\",\r\n        defaultRowData: [{ label: \"-----\", value: \"-----\" }],\r\n        isLookUp: false,\r\n        lookUpField: null,\r\n        lookUpTable: \"\",\r\n        lookUpkey: \"\",\r\n        doLookUpchange: \"\",\r\n        parent: \"検査項目コード\",\r\n        parentOptionCode: \"枝番号\",\r\n        parentOptionTable: \"検査内容テーブル\",\r\n        subTitle: \"枝名\",\r\n        app: 569\r\n    },\r\n    検査項目コード: {\r\n        type: \"dropdown\",\r\n        columnLabel: \"検査項目コード\",\r\n        defaultRowData: \"\",\r\n        isLookUp: false,\r\n        lookUpField: null,\r\n        lookUpTable: \"\",\r\n        lookUpkey: \"\",\r\n        doLookUpchange: \"\",\r\n        parent: \"\",\r\n        parentOptionCode: \"検査項目コード\",\r\n        parentOptionTable: \"\",\r\n        subTitle: \"検査項目名\",\r\n        app: 569\r\n    },\r\n    検査項目名: {\r\n        type: \"text\",\r\n        columnLabel: \"検査項目名\",\r\n        defaultRowData: \"\",\r\n        isLookUp: true,\r\n        lookUpField: \"検査項目名\",\r\n        lookUpTable: \"\",\r\n        lookUpkey: \"検査項目コード\",\r\n        doLookUpchange: \"検査項目コード\",\r\n        parent: \"\",\r\n        parentOptionCode: \"\",\r\n        parentOptionTable: \"\",\r\n        subTitle: \"\",\r\n        app: 569\r\n    },\r\n    枝名: {\r\n        type: \"text\",\r\n        columnLabel: \"枝名\",\r\n        defaultRowData: \"\",\r\n        isLookUp: true,\r\n        lookUpField: \"枝名\",\r\n        lookUpTable: \"検査内容テーブル\",\r\n        lookUpkey: \"枝番号\",\r\n        doLookUpchange: \"枝番号\",\r\n        parent: \"\",\r\n        parentOptionCode: \"\",\r\n        parentOptionTable: \"\",\r\n        subTitle: \"\",\r\n        app: 569\r\n    }\r\n};\r\n\n\n//# sourceURL=webpack://customize-dynamic-dropdown/./src/static/static.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/common/dynamicDropdown.ts");
/******/ 	
/******/ })()
;